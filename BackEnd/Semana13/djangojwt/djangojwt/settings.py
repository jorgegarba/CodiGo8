"""
Django settings for djangojwt project.

Generated by 'django-admin startproject' using Django 3.0.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from datetime import timedelta
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Para modificar la configuracion de mi JWT
SIMPLE_JWT = {
    # TIEMPO DE DURACION DEL TOKEN
    'ACCESS_TOKEN_LIFETIME': timedelta(seconds=20),
    # TIEMPO DE DURACION DEL TOKEN REFRESCADO
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    # MANDAR A LA LISTA NEGRA A LA TOKEN YA GENERADA DESPUES DEL REFRESH
    'BLACKLIST_AFTER_ROTATION': True,
    # CAMBIAR EL ALGORITMO DE ENCRIPTACION DE LA TOKEN
    # HS256, HS384 HS512
    'ALGORITHM': 'HS256',
    # CAMBIAR LA CLAVE DE ENCRIPTACION DE LA TOKEN
    'SIGNING_KEY': 'clavedelatoken',
    # PARA VERIFICAR EL CONTENIGO DE LA TOKEN GENERADA
    # Si nosotros ya tenemos un algoritmo definido, la verificacion ya no se cumple o si tenemos la firma o clave de la token por orden de prioridad va a ser usada la firma
    'VERIFYING_KEY': 'clavedelatoken',
    # para incluir todas las token generadas o decodificadas. Cuando se pone su valor None, este campo excluye todas las token y no se valida
    'AUDIENCE': None,
    # PARA MODIFICAR EL TIPO DE AUTORIZACION 
    'AUTH_HEADER_TYPES':('Bearer',),#'JWT' 
    # TIPO DE VALIDACION DE LA TOKEN
    # Se recomienda es usar el id de usuario puesto que si ponemos el nombre
    'USER_ID_FIELD':'id',
    # Se usa para almacenar la identificacion del usuario, x ejemplo: user_id signifca que los token generados incluyen el claim 'user_id'
    'USER_ID_CLAIM': 'user_id',
    # Para mayor informacion, adjunto link de documentacion:
    # https://github.com/davesque/django-rest-framework-simplejwt

    # Para desencriptar la token en el fronT: https://stackoverflow.com/questions/38552003/how-to-decode-jwt-token-in-javascript-without-using-a-library

}

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '%98*8kw_nz40=+&ib%5*_0u1g-qm+7y!t3)uy3_@pisdpv^k1*'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    # el nombre de la aplicacion
    'api',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'djangojwt.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djangojwt.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'djangojwt',
        'HOST': 'localhost',
        'USER': 'root',
        'PASSWORD': 'root',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'es'

TIME_ZONE = 'America/Lima'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES':[
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ]
}